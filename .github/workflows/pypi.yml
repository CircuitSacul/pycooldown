name: pypi

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build_wheels:
    name: py${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [39, 310, 311]

    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow --tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: set version
        run: |
          pip install poetry
          poetry version $(git describe --tags --abbrev=0)
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: "cp${{ matrix.python-version}}-*"
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  build_sdist:
    name: sdist and python wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow --tags
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.8"
      - name: Build Sdist
        run: |
          pip install poetry
          poetry version $(git describe --tags --abbrev=0)
          poetry build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist/*.tar.gz

  publish:
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow --tags
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install Dependencies
        run: pip install poetry
      - name: Build & Upload
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry version $(git describe --tags --abbrev=0)
          poetry publish
